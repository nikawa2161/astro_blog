---
import "./contentStyle.css";
import SideBar from "./SideBar.astro";
const { content } = Astro.props;
---

<section class="flex gap-x-7 px-3 pt-32">
  <div class="flex-1 p-4 rounded-xl shadow bg-white">
    <div class="post" set:html={content} />
  </div>
  <SideBar />
</section>

<script>
  type AnchorProperty = {
    href: string;
    textContent: string;
  };

  type ListItemEl = HTMLLIElement & {
    lastElementChild: AnchorProperty;
  };

  //スコープの影響考慮して、一度レンダリングされた後にDOMの取得
  const anchorItemEl = document.querySelector<HTMLElement>("li.item");

  if (anchorItemEl !== null) {
    anchorItemEl.remove();

    const createSectionAnchor = (titleEl: Element) => {
      const newAncorItemEl = anchorItemEl.cloneNode(true) as ListItemEl;
      newAncorItemEl.lastElementChild.href = `#${titleEl.id}`;
      newAncorItemEl.lastElementChild.textContent = titleEl.innerHTML;

      return newAncorItemEl;
    };

    const activateIndex = (element: HTMLElement) => {
      // すでにアクティブになっている目次を選択
      const isActiveIndex = document.querySelector("#sideBar .active");
      if (isActiveIndex !== null) {
        isActiveIndex.classList.remove("active");
      }
      const newActiveIndex = document.querySelector(`a[href='#${element.id}']`);
      if (newActiveIndex !== null) {
        const parentElement = newActiveIndex.parentElement;
        parentElement?.classList.add("active");
      }
    };

    const addSectionTitleToSidebar = (sectionTitleEl: ListItemEl) => {
      document.querySelector("#sideBar")?.appendChild(sectionTitleEl);
    };

    const observerOptions = {
      root: null,
      rootMargin: "0px 0px -70% 0px",
    };
    const sectionTitleToIntersect: IntersectionObserverCallback = (
      entries: IntersectionObserverEntry[]
    ) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          activateIndex(entry.target as HTMLElement);
        }
      });
    };

    const observer = new IntersectionObserver(sectionTitleToIntersect, observerOptions);
    const sectionTitles = [...document.querySelectorAll(".post h1")];

    const sectionAnchors = sectionTitles.map((titleEl, index) => {
      observer.observe(titleEl);
      titleEl.id = `title${index}`;

      return createSectionAnchor(titleEl);
    });

    sectionAnchors.map((elmentLi) => {
      addSectionTitleToSidebar(elmentLi);
    });
  }
</script>

<style>
  section {
    max-width: 1200px;
    margin: 0 auto;
  }
  h2 {
    font-size: 1.6rem;
  }
</style>
